class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
    //optimal TC = O(n^2) approxe , SC = O(n)
        vector<vector<int>> ans;
        int n = nums.size();
        sort(nums.begin(), nums.end());

        for (int i = 0; i < n; i++) {
        if (i > 0 && nums[i] == nums[i - 1]) continue; 

            int j = i + 1;
            int k = n - 1;

            while (j < k) {
             int sum = nums[i] + nums[j] + nums[k];
            if (sum < 0) {
                 j++;
                } else if (sum > 0) {
                    k--;
                } else {
                   ans.push_back({nums[i], nums[j], nums[k]});
                    j++;
                k--;
                   while (j < k && nums[j] == nums[j - 1]) j++;  
                    while (j < k && nums[k] == nums[k + 1]) k--; 
                }
            }
        }
        return ans;
    }
};

    //Better : TC = O(n2logM) , SC = o(n)+ o(M)
    //  int n = nums.size();
    //  set <vector <int>> st;
    // for(int i=0;i<n;i++){
    //     set <int> hashset;
    //     for(int j=i+1;j<n;j++){
    //      int k = -(nums[i] +  nums[j]);
    //      if(hashset.find(k) != hashset.end()){
    //          vector<int> temp= {nums[i],nums[j],k};
    //          sort(temp.begin(),temp.end());
    //          st.insert(temp);
    //      }
    //      hashset.insert(nums[j]);
    //     }
    // }
    // vector<vector<int>>ans(st.begin(),st.end());
    // return ans;
//     }
// };


    // Brute : TC = O(n^3)* M, SC = O(log n) 
    //     int n = nums.size();
    //     set <vector<int>> st;
        
    //   for(int i=0;i<n-2;i++){
    //     for(int j=i+1;j<n-1;j++){
    //         for(int k=j+1;k<n;k++){
    //             if(nums[i]+nums[j]+nums[k] == 0){
    //                vector<int> temp = {nums[i],nums[j],nums[k]};
    //                sort(temp.begin(),temp.end());
    //                st.insert(temp);
    //             }
    //         }
    //     }
    //   }
    //   vector<vector<int>>ans(st.begin(),st.end());
    //   return ans;  
//     }
// };
