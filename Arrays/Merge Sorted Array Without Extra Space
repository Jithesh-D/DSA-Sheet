class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
      //optimal: TC = O(min(m,n))+ O(n log n ) +O(m log m) , SC = o(1);
      int left = m-1;
      int right = 0;
      while(left >=0 && right < n){
        if(nums2[right]< nums1[left]){
            swap(nums1[left],nums2[right]);
        }else{
            break;
        }
        left--;
        right++;
      }
    sort(nums1.begin(),nums1.begin() + m);
    sort(nums2.begin(),nums2.end());

 for (int i = 0; i < n; i++) {
            nums1[m + i] = nums2[i];
        }

        //Brute Force - TC = O(n+m) , sc =O(n+m)
        // vector<int>ans;
        // int i=0;
        // int j =0;
        // while(i<m && j<n){
        //     if(nums1[i] < nums2[j]){
        //         ans.push_back(nums1[i]);
        //         i++ ; 
        //     }else{
        //         ans.push_back(nums2[j]);
        //         j++;
        //     }
        // }
        // while(i<m){
        //     ans.push_back(nums1[i]);
        //     i++;
        // }
        // while(j<n){
        //     ans.push_back(nums2[j]);
        //     j++;
        // }

        // for(int k=0;k<m+n;k++){
        //     nums1[k] = ans[k];
        // }
        
    }
};
